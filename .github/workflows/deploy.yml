# This is a basic workflow to help you get started with Actions
name: Deploy Multi-Environment Infrastructure
on:
  push:
    branches: [main]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # Allows manual trigger for production
    inputs:
      environment:
        description: 'Environment to deploy (dev, staging, prod)'
        required: true
        default: 'dev'
jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: ["dev", "staging", "prod"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"
    - name: Terraform Init
      run: terraform init
      working-directory: environments/${{ matrix.env }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Terraform Apply
      if: matrix.env != 'prod' || github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
      run: terraform apply -auto-approve
      working-directory: environments/${{ matrix.env }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Production Approval
      if: matrix.env == 'prod' && github.event_name != 'workflow_dispatch'
      uses: trstringer/manual-approval@v1
      with:
        environment: production
    - name: Terraform Apply (Production)
      if: matrix.env == 'prod' && steps.approval.outputs.approved == 'true'
      run: terraform apply -auto-approve
      working-directory: environments/prod
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
